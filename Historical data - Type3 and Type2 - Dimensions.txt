When it comes to your fact tables, normally in those tables, you will only be appending data onto the fact table. So, for example, if you have sales data, you'll keep on adding sales information as soon as it is available in your transactional system. You'll take it from there, whatever are the incremental inserts that have happened in your transactional table. You'll do the same inserts in your fact table as append operations.

But when it comes to your dimension tables, sometimes there are updates that can happen onto the rows in your dimension table. For example, let's say you have a dimension table that is storing information about the products. Let's say for a particular product ID in the transactional system, the prep name changes. So there's a small change, let's say in the product name. So there are different ways in which you will actually handle this change in your data warehouse. So these are known as slowly changing dimensions.

Now there are different categories when it comes to slowly changing dimensions, and it depends on the change that you're going to make in the dimension table in your SQL data warehouse. So I'll just quickly discuss type one and type two changing dimensions.

Type two changing dimensions is very important from an exam perspective, but it's very easy to understand what is a type two dimension. In type one, if there is a change for let's say the product name for a particular product ID in the transaction system, let's say in your SQL database, in your dimension table for the same product, you can just go ahead and simply update the product name for that product ID. It's as simple as that. So this is when it comes to type one slowly changing dimensions.

Now if you're looking at type two, in type two you would want to keep both the old value of the product name and the new value of the product name. So your fact table would be looking at anyway the product ID and not at the product name. But in certain situations, you might want to have both the old information and the new information in the dimension table. So here as an example, we have the key, we have the product id, and we have both of the product names. So this is the old product name and this is the new one.

So what you can do is that in your dimension table, in such a case, you would introduce two additional columns. One is known as the start date and the other is known as the end date. So here you are saying that product A, the name was valid between this start date and this end date, and when a change was made onto the product name, now we have a new row and here we mentioned the start date and the end date. So the end date is an infinite date at this point in time. And then your query needs to address the start and the end date when it's performing joint with your fact tables. And then you can have one more column just to specify what is the current value for the product itself.

So there are different ways in which you can actually handle the changes in your dimension tables. In this particular chapter, I just want to go through the two main types when it comes to slowly changing dimensions.

-----

I quickly want to cover type three dimensions. And the reason I want to cover this is because in the exam I did get a question on type three dimensions. So I only thought that I would get questions based on type two, but I did get a question on type three. That's why I just wanna quickly go through a type three dimension.

So in the type two dimension here in terms of the columns, we would have a "start" and an "end date". And you can have an "is current" column as well. So here, if the name of, let's say the product does change, remember we will add an additional row. But when it comes to a type three dimension based table, here you will not have the additional row in place. Instead of actually having the "start" and the "end date" has different columns, you'll actually have the "original name" and let's say the "changed name" of the product here, and then you'll have the "effective date" from when the change took place. So this is another way in which you can represent changes in your dimension table. Now here the issue is if the product changes for the third time. So here you would need to then have probably an additional column. So this can become an issue. Adding multiple rows is fine. So that's why normally I've seen that people using the type two dimensions instead of using type three dimension tables. So again, just because I got a question in the exam I want to just have a quick view on type three dimension based tables.
